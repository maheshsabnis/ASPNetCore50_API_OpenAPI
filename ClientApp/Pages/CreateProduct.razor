@page "/createproducts"
@using ClientNS
@inject HttpClient httpClient;
@inject NavigationManager navigationManager

<h2>Create Product</h2>
<div class="container">
    <EditForm Model="@product" OnValidSubmit="@save">
        <div class="form-group">
            <label>Product Id</label>
            <InputText @bind-Value="@product.ProductId" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label>Product Name</label>
            <InputText @bind-Value="@product.ProductName" class="form-control"></InputText>
        </div>
         <div class="form-group">
            <label>Category Name</label>
            <InputSelect @bind-Value="@product.CategoryName" class="form-control">
                <option>Select Category Name</option>
                @foreach(var cat in Categorise)
                {
                    <option>@cat</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label>Manufacturer</label>
            <InputSelect @bind-Value="@product.Manufacturer" class="form-control">
                <option>Select Manufacturer</option>
                @foreach(var man in Mannfacturers)
                {
                    <option>@man</option>
                }
            </InputSelect>
        </div>
         <div class="form-group">
            <label>Description</label>
            <InputTextArea @bind-Value="@product.Description" class="form-control"></InputTextArea>
        </div>
         <div class="form-group">
            <label>Product Name</label>
            <InputNumber @bind-Value="@product.Price" class="form-control"></InputNumber>
        </div>
         
         <div class="form-group">
            <input type="reset" value="Clear" class="btn btn-warning">
            <input type="submit" value="Save" class="btn btn-success">
        </div>
    </EditForm>
</div> 


@code {
    private ProductsInfo product;
    private List<string> Categorise;
    private List<string> Mannfacturers;
    private ClientProxy proxy;
    protected override Task OnInitializedAsync()
    {
        product = new ProductsInfo();
        Categorise = new List<string>() {"Electronics", "Electrical","Food", "Fashion","Home Appliances"};
        Mannfacturers = new List<string>() {"HP","IBM","Bajaj","TATA" };
        proxy = new ClientProxy("http://localhost:55071/", httpClient);
        return base.OnInitializedAsync();
    }
    private async Task save()
    {
       var res =   await proxy.CreateAsync(product);
         
       navigationManager.NavigateTo("/productslist");            
         
    }
}
